object Depends {
    const val testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    const val supportCompat = "androidx.appcompat:appcompat:${Versions.androidXLibVersion}"
    const val recycler = "androidx.recyclerview:recyclerview:${Versions.androidXLibVersion}"
    const val paging = "androidx.paging:paging-runtime:2.0.0-beta01"
    const val pagingRx = "androidx.paging:paging-rxjava2:2.0.0-beta01"
    const val extensions = "androidx.lifecycle:lifecycle-extensions:2.0.0-beta01"
    const val design = "com.google.android.material:material:${Versions.androidXMaterialLibVersion}"
    const val picasso = "com.squareup.picasso:picasso:${Versions.picassoVersion}"
    const val constraintLayout = "androidx.constraintlayout:constraintlayout:${Versions.constraintLayoutVersion}"
    const val kotlin = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${Versions.kotlinVersion}"
    const val rxJava = "io.reactivex.rxjava2:rxjava:2.1.6"
    const val rxAndroid = "io.reactivex.rxjava2:rxandroid:2.1.0"
    const val dagger = "com.google.dagger:dagger:${Versions.daggerVersion}"
    const val daggerAndroid = "com.google.dagger:dagger-android-support:${Versions.daggerVersion}"
    const val daggerCompiler = "com.google.dagger:dagger-compiler:${Versions.daggerVersion}"
    const val daggerProcessor = "com.google.dagger:dagger-android-processor:${Versions.daggerVersion}"
    const val archComponents = "androidx.lifecycle:lifecycle-extensions:${Versions.androidXLifecycleLibVersion}"
    const val archComponentsCompiler = "androidx.lifecycle:lifecycle-compiler:${Versions.androidXLifecycleLibVersion}"
    const val retrofit = "com.squareup.retrofit2:retrofit:${Versions.retrofitVersion}"
    const val retrofitGsonConverter = "com.squareup.retrofit2:converter-gson:${Versions.retrofitVersion}"
    const val retrofitRxJava2Adapter = "com.squareup.retrofit2:adapter-rxjava2:${Versions.retrofitVersion}"
    const val okhttpLoggingInterceptor =
            "com.squareup.okhttp3:logging-interceptor:${Versions.okhttpLoggingInterceptorVersion}"
    const val objectboxAndroid = "io.objectbox:objectbox-android:${Versions.objectboxVersion}"
    const val objectboxProcessor = "io.objectbox:objectbox-processor:${Versions.objectboxVersion}"
    const val objectboxKotlin = "io.objectbox:objectbox-kotlin:${Versions.objectboxVersion}"
    const val navigationFragment = "android.arch.navigation:navigation-fragment-ktx:${Versions.navigationVersion}"
    const val navigationUI = "android.arch.navigation:navigation-ui-ktx:${Versions.navigationVersion}"

    const val kotlinTest = "org.jetbrains.kotlin:kotlin-test-junit:${Versions.kotlinVersion}"
    const val robolectric = "org.robolectric:robolectric:${Versions.robolectricVersion}"
    const val junit = "junit:junit:${Versions.junitVersion}"
    const val mockito = "com.nhaarman:mockito-kotlin:${Versions.mockitoVersion}"

    const val testRunner = "androidx.test.ext:junit:${Versions.androidXTestVersion}"
    const val testRules = "androidx.test:rules:${Versions.androidXTestVersion}"
    const val espressoCore = "androidx.test.espresso:espresso-core:${Versions.androidXEspressoVersion}"
    const val espressoIntents = "androidx.test.espresso:espresso-intents:${Versions.androidXEspressoVersion}"
    const val androidAnnotations = "androidx.annotation:annotation:${Versions.androidXLibVersion}"
}